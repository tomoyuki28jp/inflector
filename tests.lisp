(eval-when (:compile-toplevel :load-toplevel :execute)
  (asdf:oos 'asdf:load-op :inflector)
  (asdf:oos 'asdf:load-op :fiveam))

(in-package :cl-user)
(defpackage :inflector-tests (:use :cl :inflector :fiveam))
(in-package :inflector-tests)

(def-suite inflector)
(in-suite inflector)

(defvar *test-cases*
  '(("search"      . "searches")
    ("switch"      . "switches")
    ("fix"         . "fixes")
    ("box"         . "boxes")
    ("process"     . "processes")
    ("address"     . "addresses")
    ("case"        . "cases")
    ("stack"       . "stacks")
    ("wish"        . "wishes")
    ("fish"        . "fish")
    ("category"    . "categories")
    ("query"       . "queries")
    ("ability"     . "abilities")
    ("agency"      . "agencies")
    ("movie"       . "movies")
    ("archive"     . "archives")
    ("index"       . "indices")
    ("wife"        . "wives")
    ("safe"        . "saves")
    ("half"        . "halves")
    ("move"        . "moves")
    ("salesperson" . "salespeople")
    ("person"      . "people")
    ("spokesman"   . "spokesmen")
    ("man"         . "men")
    ("woman"       . "women")
    ("basis"       . "bases")
    ("diagnosis"   . "diagnoses")
    ("diagnosis_a" . "diagnosis_as")
    ("datum"       . "data")
    ("medium"      . "media")
    ("analysis"    . "analyses")
    ("node_child"  . "node_children")
    ("child"       . "children")
    ("experience"  . "experiences")
    ("day"         . "days")
    ("comment"     . "comments")
    ("foobar"      . "foobars")
    ("newsletter"  . "newsletters")
    ("old_news"    . "old_news")
    ("news"        . "news")
    ("series"      . "series")
    ("species"     . "species")
    ("quiz"        . "quizzes")
    ("perspective" . "perspectives")
    ("ox"          . "oxen")
    ("photo"       . "photos")
    ("buffalo"     . "buffaloes")
    ("tomato"      . "tomatoes")
    ("dwarf"       . "dwarves")
    ("elf"         . "elves")
    ("information" . "information")
    ("equipment"   . "equipment")
    ("bus"         . "buses")
    ("status"      . "statuses")
    ("status_code" . "status_codes")
    ("mouse"       . "mice")
    ("louse"       . "lice")
    ("house"       . "houses")
    ("octopus"     . "octopi")
    ("virus"       . "viri")
    ("alias"       . "aliases")
    ("portfolio"   . "portfolios")
    ("vertex"      . "vertices")
    ("matrix"      . "matrices")
    ("matrix_fu"   . "matrix_fus")
    ("axis"        . "axes")
    ("testis"      . "testes")
    ("crisis"      . "crises")
    ("rice"        . "rice")
    ("shoe"        . "shoes")
    ("horse"       . "horses")
    ("prize"       . "prizes")
    ("edge"        . "edges")
    ("cow"         . "kine")))

(test pluralize
  (loop for c in *test-cases*
        do (is (string= (pluralize (car c)) (cdr c))))
  (is (string= (pluralize "PERSON") "people")))

(test singularize
  (loop for c in *test-cases*
        do (is (string= (singularize (cdr c)) (car c))))
  (is (string= (singularize "PEOPLE") "person")))

; run all tests
;(5am:run! 'inflector)
